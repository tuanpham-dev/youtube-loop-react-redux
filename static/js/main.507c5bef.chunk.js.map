{"version":3,"sources":["reducers/index.js","actions/actionTypes.js","store/configureStore.js","components/Button/Button.jsx","utils/getYouTubeVideoId.js","components/Header/Header.jsx","actions/videoAction.js","utils/loadYouTubeAPI.js","components/Video/YouTube.jsx","utils/timeFormat.js","components/Video/Video.jsx","components/Video/VideoList.jsx","components/MainContent/MainContent.jsx","components/App/App.jsx","serviceWorker.js","index.js","utils/localStorage.js"],"names":["initialState","videos","playingVideo","id","state","type","payload","index","maxId","Math","max","map","video","youtubeId","volume","range","videoId","length","nextVideoIndex","findIndex","previousVideoIndex","splice","defaultState","Button","className","color","onClick","children","buttonClass","getYouTubeVideoId","url","parseUrl","replace","split","undefined","connect","dispatch","onAddButtonClick","input","onPlayButtonClick","onStopButtonClick","onNextButtonClick","onPreviousButtonClick","useState","setInput","videosCount","isPlaying","canPlayNextPrev","href","placeholder","value","onChange","event","target","api","getYouTubeAPI","Promise","resolve","window","YT","ready","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","YouTube","onReady","onPlaying","onPaused","onEnded","onError","container","useRef","useEffect","loadYouTubeAPI","then","current","player","Player","events","onStateChange","data","PlayerState","PLAYING","PAUSED","ENDED","ref","timeFormat","time","hours","floor","minutes","seconds","toString","padStart","removeVideo","editVideo","playVideo","playNextVideo","setPlayer","videoLoaded","setVideoLoaded","duration","setDuration","title","setTitle","playingStateChanged","setPlayingStateChanged","canMove","setVideoVolume","setVolume","trackStatus","currentTime","getCurrentTime","playerState","getPlayerState","getVolume","interval","setInterval","clearInterval","seekTo","pauseVideo","getDuration","getVideoData","vertical","updateVideos","list","setList","handle","key","MainContent","App","props","Boolean","location","hostname","match","store","serializedState","localStorage","getItem","JSON","parse","loadState","createStore","rootReducer","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","saveState","getState","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.507c5bef.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n  videos: [],\n  playingVideo: {\n    id: null\n  }\n}\n\nexport default (state = initialState, { type, payload }) => {\n  let index = null\n\n  switch (type) {\n    case actionTypes.ADD_VIDEO_BY_YOUTUBE_ID:\n      const maxId = Math.max(...state.videos.map(video => video.id), 0)\n      const video = {\n        id: maxId + 1,\n        youtubeId: payload.youtubeId,\n        volume: null,\n        range: [null, null]\n      }\n\n      return {\n        ...state,\n        videos: [...state.videos, video]\n      }\n\n    case actionTypes.ADD_VIDEO:\n      return {\n        ...state,\n        videos: [...state.videos, payload.video]\n      }\n\n    case actionTypes.PLAY_VIDEO:\n      if (state.playingVideo.videoId !== payload.videoId) {\n        return {\n          ...state,\n          playingVideo: {\n            id: payload.videoId\n          }\n        }\n      } else {\n        return state\n      }\n\n    case actionTypes.PLAY_FIRST_VIDEO:\n      if (state.videos.length > 0) {\n        return {\n          ...state,\n          playingVideo: {\n            id: state.videos[0].id\n          }\n        }\n      } else {\n        return state;\n      }\n\n    case actionTypes.PLAY_NEXT_VIDEO:\n      let nextVideoIndex\n      index = state.videos.findIndex(video => video.id === state.playingVideo.id)\n\n      if (index === state.videos.length - 1) {\n        nextVideoIndex = 0\n      } else {\n        nextVideoIndex = index + 1\n      }\n      \n      return {\n        ...state,\n        playingVideo: {\n          id: state.videos[nextVideoIndex].id\n        }\n      }\n\n    case actionTypes.PLAY_PREVIOUS_VIDEO:\n      let previousVideoIndex\n      index = state.videos.findIndex(video => video.id === state.playingVideo.id)\n\n      if (index === 0) {\n        previousVideoIndex = state.videos.length - 1\n      } else {\n        previousVideoIndex = index - 1\n      }\n      \n      return {\n        ...state,\n        playingVideo: {\n          id: state.videos[previousVideoIndex].id\n        }\n      }\n    \n    case actionTypes.UPDATE_VIDEOS:\n      return {\n        ...state,\n        videos: [...payload.videos]\n      }\n\n    case actionTypes.REMOVE_VIDEO:\n      index = state.videos.findIndex(video => video.id === payload.videoId)\n      let playingVideo = null\n\n      if (index !== null) {\n        if (state.playingVideo.id === payload.videoId) {\n          if (state.videos.length <= 1) {\n            playingVideo = {\n              id: null\n            }\n          } else {\n            playingVideo = {\n              id: state.videos[index === 0 ? state.videos.length - 1 : index - 1].id\n            }\n          }\n        }\n\n        const videos = [...state.videos]\n        videos.splice(index, 1)\n\n        if (playingVideo !== null) {\n          return {\n            ...state,\n            videos,\n            playingVideo\n          }\n        } else {\n          return {\n            ...state,\n            videos\n          }\n        }\n      } else {\n        return state\n      }\n\n    case actionTypes.EDIT_VIDEO:\n      index = state.videos.findIndex(video => video.id === payload.video.id)\n\n      if (index !== null) {\n        const videos = [...state.videos]\n        videos.splice(index, 1, payload.video)\n\n        return {\n          ...state,\n          videos\n        }\n      } else {\n        return state\n      }\n\n    default:\n      return state\n  }\n}\n","export const ADD_VIDEO_BY_YOUTUBE_ID = 'ADD_VIDEO_BY_YOUTUBE_ID'\nexport const ADD_VIDEO = 'ADD_VIDEO'\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO'\nexport const EDIT_VIDEO = 'EDIT_VIDEO'\nexport const PLAY_VIDEO = 'PLAY_VIDEO'\nexport const PLAY_FIRST_VIDEO = 'PLAY_FIRST_VIDEO'\nexport const PLAY_NEXT_VIDEO = 'PLAY_NEXT_VIDEO'\nexport const PLAY_PREVIOUS_VIDEO = 'PLAY_PREVIOUS_VIDEO'\nexport const UPDATE_VIDEOS = 'UPDATE_VIDEOS'\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport { loadState, saveState } from '../utils/localStorage'\nimport throttle from 'lodash.throttle'\n\nconst defaultState = {\n  videos: [],\n  playingVideo: {\n    id: null\n  }\n}\n\nexport default (initialState) => {\n  if (initialState === undefined) {\n    const state = loadState()\n    initialState = {\n      ...defaultState,\n      ...state\n    }\n  }\n\n  const store = createStore(rootReducer, initialState, applyMiddleware(thunk))\n\n  store.subscribe(throttle(() => {\n    saveState(store.getState())\n  }, 1000))\n\n  return store\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Button.scss'\n\nexport const Button = ({ className, color, onClick, children }) => {\n  let buttonClass = className + ' button'\n\n  if (color) {\n    buttonClass += ` button--${color}`\n  }\n  \n  return (\n    <button className={buttonClass} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  color: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default Button","export const getYouTubeVideoId = (url) => {\n  let videoId = ''\n  const parseUrl = url.replace(/(>|<)/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/)\n\n  if (parseUrl[2] !== undefined) {\n    videoId = parseUrl[2].split(/[^0-9a-z_-]/i)\n    videoId = videoId[0]\n  } else {\n    videoId = url\n  }\n\n  return videoId\n}\n\nexport default getYouTubeVideoId","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './Header.scss'\nimport Button from '../Button/Button'\nimport { addVideoByYouTubeId, playFirstVideo, stopVideo, playNextVideo, playPreviousVideo } from '../../actions/videoAction'\n\nconst Header = ({ videos, playingVideo, onAddButtonClick, onPlayButtonClick, onStopButtonClick, onNextButtonClick, onPreviousButtonClick }) => {\n  const [input, setInput] = useState('')\n\n  const videosCount = videos.length\n  const isPlaying = playingVideo.id !== null\n  const canPlayNextPrev = isPlaying && videosCount > 1\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"header__logo\">YouTube Loop</a>\n        \n        {videosCount > 0 &&\n          <div className=\"header__controls\">\n            {isPlaying ?\n              <Button onClick={onStopButtonClick}>Stop</Button>\n              :\n              <Button onClick={onPlayButtonClick}>Play</Button>\n            }\n\n            {canPlayNextPrev &&\n              <>\n                <Button onClick={onPreviousButtonClick}>Previous</Button>\n                <Button onClick={onNextButtonClick}>Next</Button>\n              </>\n            }\n          </div>\n        }\n\n        <div className=\"header__input-group\">\n          <input type=\"text\" className=\"header__input\"\n            placeholder=\"Enter YouTube URL or Video ID\"\n            value={input}\n            onChange={event => setInput(event.target.value)}\n          />\n          <div className=\"header__input-group-append\">\n            <Button color=\"blue\" onClick={() => onAddButtonClick(input)}>Go Loop!</Button>\n          </div>\n        </div>      \n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  playingVideo: state.playingVideo\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onAddButtonClick: input => {\n    dispatch(addVideoByYouTubeId(input))\n  },\n  onPlayButtonClick: () => {\n    dispatch(playFirstVideo())\n  },\n  onStopButtonClick: () => {\n    dispatch(stopVideo())\n  },\n  onNextButtonClick: () => {\n    dispatch(playNextVideo())\n  },\n  onPreviousButtonClick: () => {\n    dispatch(playPreviousVideo())\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import * as actionTypes from '../actions/actionTypes'\n// import isYouTubeVideoExists from '../utils/isYouTubeVideoExists'\nimport getYouTubeVideoId from '../utils/getYouTubeVideoId'\n\nexport const addVideoByYouTubeId = (youtubeId) => {\n  const videoId = getYouTubeVideoId(youtubeId)\n\n  return {\n    type: actionTypes.ADD_VIDEO_BY_YOUTUBE_ID,\n    payload: {\n      youtubeId: videoId\n    }\n  }\n\n  // return dispatch => {\n  //   const videoId = getYouTubeVideoId(youtubeId)\n\n  //   isYouTubeVideoExists(videoId).then(isExists => {\n  //     if (isExists) {\n  //       dispatch({\n  //         type: actionTypes.ADD_VIDEO_BY_YOUTUBE_ID,\n  //         payload: {\n  //           youtubeId: videoId\n  //         }\n  //       })\n  //     }\n  //   })\n  // }\n}\n\nexport const addVideo = (video) => {\n  return {\n    type: actionTypes.ADD_VIDEO,\n    payload: {\n      video\n    }\n  }\n}\n\nexport const removeVideo = (videoId) => {\n  return {\n    type: actionTypes.REMOVE_VIDEO,\n    payload: {\n      videoId\n    }\n  }\n}\n\nexport const editVideo = (video) => {\n  return {\n    type: actionTypes.EDIT_VIDEO,\n    payload: {\n      video\n    }\n  }\n}\n\nexport const updateVideos = (videos) => {\n  return {\n    type: actionTypes.UPDATE_VIDEOS,\n    payload: {\n      videos\n    }\n  }\n}\n\nexport const playVideo = (videoId) => {\n  return {\n    type: actionTypes.PLAY_VIDEO,\n    payload: {\n      videoId\n    }\n  }\n}\n\nexport const playFirstVideo = () => {\n  return {\n    type: actionTypes.PLAY_FIRST_VIDEO\n  }\n}\n\nexport const stopVideo = () => {\n  return {\n    type: actionTypes.PLAY_VIDEO,\n    payload: {\n      videoId: null\n    }\n  }\n}\n\nexport const playNextVideo = () => ({\n  type: actionTypes.PLAY_NEXT_VIDEO\n})\n\nexport const playPreviousVideo = () => ({\n  type: actionTypes.PLAY_PREVIOUS_VIDEO\n})\n\n","function loadYouTubeAPI () {\n  return new Promise((resolve) => {\n    if (typeof window.YT === 'object' && typeof window.YT.ready === 'function') {\n      window.YT.ready(() => {\n        resolve(window.YT)\n      })\n\n      return\n    }\n\n    const tag = document.createElement('script')\n    tag.src = 'https://www.youtube.com/iframe_api'\n    const firstScriptTag = document.getElementsByTagName('script')[0]\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n\n    window.onYouTubeIframeAPIReady = () => {\n      resolve(window.YT)\n    }\n  })\n}\n\nlet api = null\n\nexport default function getYouTubeAPI () {\n  if (!api) {\n    api = loadYouTubeAPI()\n  }\n\n  return api\n}\n","import React, { useRef, useEffect } from 'react'\nimport loadYouTubeAPI from '../../utils/loadYouTubeAPI'\n\nconst YouTube = ({ youtubeId, onReady, onPlaying, onPaused, onEnded, onError }) => {\n  const container = useRef(null)\n\n  useEffect(() => {\n    loadYouTubeAPI().then(YT => {\n      if (container.current) {\n        const player = new YT.Player(container.current, {\n          videoId: youtubeId,\n          events: {\n            onReady: () => onReady(player),\n            onError: onError,\n            onStateChange: event => {\n              if (event.data === YT.PlayerState.PLAYING) {\n                onPlaying()\n              } else if (event.data === YT.PlayerState.PAUSED) {\n                onPaused()\n              } else if (event.data === YT.PlayerState.ENDED) {\n                onEnded()\n              }\n            }\n          }\n        })\n      }\n    })\n  })\n\n  return (\n    <div ref={container}></div>\n  )\n}\n\nexport default YouTube\n","export default function timeFormat (time) {\n  const hours = Math.floor(time / 3600)\n  const minutes = Math.floor((time - hours * 3600) / 60)\n  const seconds = time - hours * 3600 - minutes * 60\n\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n  } else {\n    return `${minutes}:${seconds.toString().padStart(2, 0)}`\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './Video.scss'\nimport YouTube from './YouTube'\nimport Button from '../Button/Button'\nimport { removeVideo, editVideo, playVideo, playNextVideo } from '../../actions/videoAction'\nimport timeFormat from '../../utils/timeFormat'\nimport Slider, { Range } from 'rc-slider'\nimport 'rc-slider/assets/index.css'\n\nexport const Video = ({ video, videos, playingVideo, removeVideo, editVideo, playVideo, playNextVideo }) => {\n  const [player, setPlayer] = useState(null)\n  const [videoLoaded, setVideoLoaded] = useState(false)\n  const [duration, setDuration] = useState(0)\n  const [title, setTitle] = useState('')\n  const [playingStateChanged, setPlayingStateChanged] = useState(false)\n\n  const canMove = videos.length > 1\n  const isPlaying = playingVideo.id === video.id\n\n  const setVideoVolume = volume => {\n    if (player) {\n      player.setVolume(volume)\n    }\n\n    editVideo({\n      ...video,\n      volume\n    })\n  }\n\n  const setVideoRange = range => {\n    if (isPlaying && player) {\n      const currentTime = player.getCurrentTime()\n\n      if (range[0] > currentTime) {\n        player.seekTo(range[0])\n      }\n    }\n\n    editVideo({\n      ...video,\n      range\n    })\n  }\n\n  const onVideoLoaded = (player) => {\n    const duration = player.getDuration()\n    setVideoLoaded(false)\n\n    if (!duration) {\n      removeVideo(video.id)\n    } else {\n      setPlayer(player)\n      setDuration(duration)\n      setTitle(player.getVideoData().title)\n\n      if (video.volume === null || video.range[0] === null || video.range[1] === null) {\n        editVideo({\n          ...video,\n          volume: player.getVolume(),\n          range: [0, duration]\n        })\n      }\n\n      if (isPlaying) {\n        player.setVolume(video.volume)\n        player.seekTo(video.range[0], true)\n        player.playVideo()\n\n        document.title = title + ' YouTube Loop in React Redux'\n      }\n    }\n\n    setVideoLoaded(true)\n  }\n\n  const onPlaying = () => {\n    if (!isPlaying) {\n      playVideo(video.id)\n    }\n  }\n\n  const onPaused = () => {\n\n  }\n\n  const onEnded = () => {\n    playNextVideo()\n    setPlayingStateChanged(true)\n  }\n\n  const onError = () => {\n    removeVideo(video)\n  }\n\n  const trackStatus = () => {\n    if (player) {\n      const currentTime = player.getCurrentTime()\n      const playerState = player.getPlayerState()\n      const volume = player.getVolume()\n\n      if (volume !== video.volume) {\n        setVideoVolume(volume)\n      }\n\n      if (playerState === 1 && currentTime > video.range[1]) {\n        onEnded()\n      }\n    }\n  }\n\n  useEffect(() => {\n    const interval = setInterval(trackStatus, 500)\n    return () => clearInterval(interval)\n  })\n\n  useEffect(() => {\n    setPlayingStateChanged(true)\n\n    return () => setPlayingStateChanged(false)\n  }, [isPlaying])\n\n  useEffect(() => {\n    if (player && playingStateChanged) {\n      setPlayingStateChanged(false)\n\n      if (isPlaying) {\n        player.setVolume(video.volume)\n        player.seekTo(video.range[0], true)\n        player.playVideo()\n\n        document.title = title + ' YouTube Loop in React Redux'\n      } else {\n        player.pauseVideo()\n        document.title = 'YouTube Loop in React Redux'\n      }\n    }\n  }, [player, isPlaying, title, playingStateChanged, video.volume, video.range])\n\n  return (\n    <div className=\"video\">\n      <div className=\"video__player\">\n        <YouTube youtubeId={video.youtubeId} onReady={onVideoLoaded} onPlaying={onPlaying} onPaused={onPaused} onEnded={onEnded} onError={onError} />\n      </div>\n\n      {videoLoaded &&\n        <>\n          <Slider className=\"video__volume-slider\" vertical=\"true\" value={video.volume} onChange={setVideoVolume} />\n          <Range className=\"video__range-slider\" max={duration} value={video.range} onChange={setVideoRange} />\n          <div className=\"video__info\">{`Volume: ${video.volume} — Range: ${timeFormat(video.range[0])} → ${timeFormat(video.range[1])}`}</div>\n        </>\n      }\n\n      <div className=\"video__buttons\">\n        {canMove &&\n          <Button className=\"video__move-handle\">Move</Button>\n        }\n        <Button color=\"red\" onClick={() => removeVideo(video.id)}>Remove Video</Button>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  videos: state.videos,\n  playingVideo: state.playingVideo\n})\n\nconst mapDispatchToProps = dispatch => ({\n  removeVideo: videoId => {\n    dispatch(removeVideo(videoId))\n  },\n  editVideo: video => {\n    dispatch(editVideo(video))\n  },\n  playVideo: videoId => {\n    dispatch(playVideo(videoId))\n  },\n  playNextVideo: () => {\n    dispatch(playNextVideo())\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video)\n","import React from 'react'\nimport './VideoList.scss'\nimport { ReactSortable } from 'react-sortablejs'\nimport Video from './Video'\nimport { connect } from 'react-redux'\nimport { updateVideos } from '../../actions/videoAction'\n\nconst VideoList = ({ videos, updateVideos }) => {\n  if (!videos.length) {\n    return null\n  }\n\n  return (\n    <ReactSortable tag=\"ul\" list={videos} setList={updateVideos} handle=\".video__move-handle\" className=\"video-list\">\n      {videos.map(video => (\n        <li key={video.id} className=\"video-item\">\n          <Video video={video} />\n        </li>\n      ))}\n    </ReactSortable>\n  )\n}\n\nconst mapStateToProps = state => ({\n  videos: state.videos\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateVideos: videos => {\n    dispatch(updateVideos(videos))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoList)\n","import React from 'react'\nimport VideoList from '../Video/VideoList'\n\nconst MainContent = ({ children }) => {\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <VideoList />\n      </div>\n    </div>\n  )\n}\n\nexport default MainContent\n","import React from 'react'\nimport Header from '../Header/Header'\nimport MainContent from '../MainContent/MainContent'\n\nexport const App = (props) => (\n  <>\n    <Header />\n    <MainContent />\n  </>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport './sass/global.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n\n    if (serializedState === null) {\n      return undefined\n    }\n\n    return JSON.parse(serializedState)\n  } catch {\n    return undefined\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch {}\n}"],"sourceRoot":""}